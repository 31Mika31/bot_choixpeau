import discord
from discord.ext import commands
from discord.ui import View, Button
import asyncio

HALL_ENTREE_ID = 1420336349613002774  # ID du salon Hall-d-Entr√©e

class Reglement(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.Cog.listener()
    async def on_message(self, message: discord.Message):
        if message.author.bot:
            return

        # V√©rifie que l‚Äôon est bien dans le salon r√®glement
        if message.channel.name.lower() != "r√®glement":
            return

        if message.content.lower() == "lumos":
            role = discord.utils.get(message.guild.roles, name="√âl√®ve")
            if role:
                await message.author.add_roles(role)

            # On construit un message RP immersif
            embed = discord.Embed(
                title="üìú Bienvenue √† Poudlard !",
                description=(
                    f"‚ú® {message.author.mention}, tu as r√©cit√© la formule magique et valid√© le r√®glement.\n\n"
                    "Les lourdes portes du ch√¢teau s‚Äôouvrent devant toi... "
                    "Tu peux d√©sormais **faire officiellement ton entr√©e √† Poudlard**.\n\n"
                    "‚û°Ô∏è Avance jusqu‚Äôau **Hall-d-Entr√©e** pour te pr√©parer √† la C√©r√©monie de R√©partition."
                ),
                color=discord.Color.gold()
            )

            view = View(timeout=None)

            button = Button(
                style=discord.ButtonStyle.primary,
                label="üö™ Avancer jusqu‚Äôau Hall-d-Entr√©e",
                custom_id=f"hall_entree_{message.author.id}"
            )

            async def button_callback(interaction: discord.Interaction):
                if interaction.user.id != message.author.id:
                    await interaction.response.send_message(
                        "‚ùå Seul l‚Äô√©l√®ve concern√© peut utiliser ce bouton.", ephemeral=True
                    )
                    return

                hall = message.guild.get_channel(HALL_ENTREE_ID)
                if hall:
                    await interaction.response.send_message(
                        f"üö™ Les lourdes portes grincent et tu p√©n√®tres dans le **Hall-d-Entr√©e**...\n\n"
                        "Au centre, des torches flottent dans les airs et une lueur myst√©rieuse t‚Äôinvite √† "
                        "attendre patiemment la C√©r√©monie de R√©partition.\n\n"
                        "Quand tu es pr√™t, invoque le Choixpeau en lan√ßant `!quiz` üé©",
                        ephemeral=True
                    )

                    # On supprime le message RP initial pour tout le monde
                    try:
                        await self.bot.welcome_messages[message.author.id].delete()
                    except Exception:
                        pass

            button.callback = button_callback
            view.add_item(button)

            sent = await message.channel.send(
                embed=embed,
                view=view
            )

            # On garde une trace du message pour pouvoir le supprimer plus tard
            self.bot.welcome_messages[message.author.id] = sent

            # Suppression automatique au bout de 15 min si rien n‚Äôest fait
            async def delete_later():
                await asyncio.sleep(900)  # 15 minutes
                if message.author.id in self.bot.welcome_messages:
                    try:
                        msg = self.bot.welcome_messages.pop(message.author.id)
                        await msg.delete()
                        await message.author.send(
                            "üå´Ô∏è Les bougies du r√®glement vacillent et s‚Äô√©teignent... "
                            "Ton opportunit√© de rejoindre Poudlard s‚Äôest dissip√©e. "
                            "Tu devras √† nouveau r√©citer la formule **Lumos** pour entrer."
                        )
                    except Exception:
                        pass

            asyncio.create_task(delete_later())

async def setup(bot):
    await bot.add_cog(Reglement(bot))
